{"version":3,"sources":["contexts/weatherContext.js","utils/DateTime.js","components/showWeather/extraWeather.jsx","utils/iconPicker.js","utils/windDirectionConverter.js","components/showWeather/mainWeather.jsx","contexts/locationContext.js","components/showWeather/weatherHeader.jsx","components/showWeather.jsx","components/forecast/tempDay.jsx","components/forecast/tempNight.jsx","components/forecast/humidity.jsx","components/forecast/cloudiness.jsx","contexts/forecastContext.js","components/forecast.jsx","weather.js","components/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["WeatherContext","createContext","WeatherProvider","props","useState","main","date","temp","windSpeed","windDeg","humidity","cloudiness","sunrise","sunset","description","feelsLike","weather","setWeather","Provider","value","children","getWeekDay","UNIX_timestamp","Date","getDay","getDate","a","year","getFullYear","month","getMonth","substr","timeConverter","getHours","getMinutes","useStyles","makeStyles","hr","height","color","backgroundColor","border","ExtraWeather","useContext","classes","Card","variant","style","marginTop","CardContent","Grid","container","spacing","item","xs","direction","justify","alignItems","marginRight","xmlns","width","fill","className","viewBox","fillRule","d","Typography","iconPicker","windDirectionConverter","angle","Math","round","MainWeather","fontWeight","parseInt","LocationContext","LocationProvider","location","setLocation","latitude","setLatitude","longitude","setLongitude","locationValue","latValue","lonValue","WeatherHeader","marginBottom","display","verticalAlign","fontSize","theme","root","mainCard","breakpoints","down","margin","up","marginLeft","ShowWeather","Container","TempDay","singleDay","forecastDayTemp","TempNight","forecastNightTemp","Humidity","forecastHumidity","Cloudiness","forecastCloudiness","ForecastContext","ForecastProvider","i","forecastDaily","forecastDateTime","forecastData","setForecastData","expandIcon","transition","transform","expanded","Forecast","map","Accordion","accordions","defaultExpanded","AccordionSummary","forecastMain","aria-controls","id","AccordionDetails","Weather","sm","menuButton","title","flexGrow","button","Navbar","useEffect","axios","get","data","city","regionName","Url","lat","lon","weatherJson","setStateData","searchCity","geoCoder","mbxGeocoding","accessToken","console","log","forwardGeocode","query","limit","send","geoData","body","features","geometry","coordinates","searchWeather","React","useMemo","e","preventDefault","current","wind_speed","wind_deg","clouds","feels_like","daily","toString","dt","day","toFixed","night","CssBaseline","AppBar","position","Toolbar","Link","href","underline","target","onClick","onSubmit","TextField","placeholder","onChange","Switch","checked","darkState","handleThemeChange","IconButton","edge","aria-label","App","Boolean","JSON","parse","localStorage","getItem","setDarkState","palletType","mainPrimaryColor","pink","lightBlue","mainSecondaryColor","purple","deepPurple","darkTheme","createMuiTheme","palette","type","primary","secondary","typography","fontFamily","ThemeProvider","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b09d0680.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const WeatherContext = createContext();\r\n\r\nexport const WeatherProvider = (props) => {\r\n  const [date, setDate] = useState(\"\");\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [windSpeed, setWindSpeed] = useState(\"\");\r\n  const [windDeg, setWindDeg] = useState(\"\");\r\n  const [humidity, setHumidity] = useState(\"\");\r\n  const [cloudiness, setCloudiness] = useState(\"\");\r\n  const [sunrise, setSunrise] = useState(\"\");\r\n  const [sunset, setSunset] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [feelsLike, setFeelsLike] = useState(\"\");\r\n\r\n  const [weather, setWeather] = useState({\r\n    main: \"\",\r\n    date: \"\",\r\n    temp: \"\",\r\n    windSpeed: \"\",\r\n    windDeg: \"\",\r\n    humidity: \"\",\r\n    cloudiness: \"\",\r\n    sunrise: \"\",\r\n    sunset: \"\",\r\n    description: \"\",\r\n    feelsLike: \"\",\r\n  });\r\n\r\n  return (\r\n    <WeatherContext.Provider value={[weather, setWeather]}>\r\n      {props.children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n","// let date = new Date();\r\n// let currentDate = date.toISOString().split(\"T\")[0];\r\n\r\nexport const getWeekDay = (UNIX_timestamp) => {\r\n  if (!UNIX_timestamp) return null;\r\n  const a = new Date(UNIX_timestamp * 1000); //this wasted 2 hours\r\n  let weekDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  return weekDays[a.getDay()];\r\n};\r\n\r\nexport const getDate = (UNIX_timestamp) => {\r\n  if (!UNIX_timestamp) return null;\r\n  const a = new Date(UNIX_timestamp * 1); //this wasted 2 hours\r\n  const year = a.getFullYear();\r\n  const month = `0${a.getMonth() + 1}`;\r\n  const date = a.getDate();\r\n  const time = date + \" \" + month.substr(-2) + \" \" + year;\r\n  return time;\r\n};\r\n\r\nexport const timeConverter = (UNIX_timestamp) => {\r\n  if (!UNIX_timestamp) return null;\r\n  const a = new Date(UNIX_timestamp * 1000); //this wasted 2 hours in original project\r\n  const hour = a.getHours();\r\n  const min = \"0\" + a.getMinutes();\r\n  const time = hour + \":\" + min.substr(-2);\r\n  return time;\r\n};\r\n\r\n// export const timeConverter = (UNIX_timestamp) => {\r\n//   if (!UNIX_timestamp) return null;\r\n//   const a = new Date(UNIX_timestamp * 1); //this wasted 2 hours\r\n//   const months = [\r\n//     \"Jan\",\r\n//     \"Feb\",\r\n//     \"Mar\",\r\n//     \"Apr\",\r\n//     \"May\",\r\n//     \"Jun\",\r\n//     \"Jul\",\r\n//     \"Aug\",\r\n//     \"Sep\",\r\n//     \"Oct\",\r\n//     \"Nov\",\r\n//     \"Dec\",\r\n//   ];\r\n//   const year = a.getFullYear();\r\n//   const month = months[a.getMonth()];\r\n//   const date = a.getDate();\r\n//   const hour = a.getHours();\r\n//   const min = a.getMinutes();\r\n//   const time = date + \" \" + month + \" \" + year + \"   -   \" + hour + \":\" + min;\r\n//   // console.log(time);\r\n//   return time;\r\n// };\r\n","import { Card, CardContent, makeStyles, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\n\r\nimport { WeatherContext } from \"../../contexts/weatherContext\";\r\n\r\nimport { timeConverter } from \"../../utils/DateTime\";\r\n\r\nconst useStyles = makeStyles({\r\n  hr: {\r\n    height: \"1px\",\r\n    color: \"#BDBDBD\",\r\n    backgroundColor: \"#555\",\r\n    border: \"none\",\r\n  },\r\n});\r\n\r\nconst ExtraWeather = () => {\r\n  //getting weather context\r\n  const [weather, setWeather] = useContext(WeatherContext);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Card variant=\"outlined\" style={{ marginTop: 20 }}>\r\n        <CardContent>\r\n          <Grid container spacing={3}>\r\n            {/* Left Item */}\r\n            <Grid item xs={6} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n              <Grid style={{ marginRight: 12 }}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-droplet-fill\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M8 16a6 6 0 0 0 6-6c0-1.655-1.122-2.904-2.432-4.362C10.254 4.176 8.75 2.503 8 0c0 0-6 5.686-6 10a6 6 0 0 0 6 6zM6.646 4.646c-.376.377-1.272 1.489-2.093 3.13l.894.448c.78-1.559 1.616-2.58 1.907-2.87l-.708-.708z\"\r\n                  />\r\n                </svg>\r\n              </Grid>\r\n              <Grid>\r\n                <Typography>Humidity</Typography>\r\n                <Typography>{weather.humidity}%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n              <Grid style={{ marginRight: 12 }}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-cloud-fill\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M4.406 3.342A5.53 5.53 0 0 1 8 2c2.69 0 4.923 2 5.166 4.579C14.758 6.804 16 8.137 16 9.773 16 11.569 14.502 13 12.687 13H3.781C1.708 13 0 11.366 0 9.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\" />\r\n                </svg>\r\n              </Grid>\r\n              <Grid>\r\n                <Typography>Cloudiness</Typography>\r\n                <Typography>{weather.cloudiness}%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {/* ========================================================================================== */}\r\n          <hr className={classes.hr} />\r\n          {/* ========================================================================================== */}\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n              <Grid style={{ marginRight: 12 }}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-sun-fill\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n                </svg>\r\n              </Grid>\r\n              <Grid>\r\n                <Typography>Sunrise</Typography>\r\n                <Typography>{timeConverter(weather.sunrise)}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n              <Grid style={{ marginRight: 12 }}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-moon-fill\"\r\n                  viewBox=\"0 0 16 16\"\r\n                >\r\n                  <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z\" />\r\n                </svg>\r\n              </Grid>\r\n              <Grid>\r\n                <Typography>Sunset</Typography>\r\n                <Typography>{timeConverter(weather.sunset)}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraWeather;\r\n","export const iconPicker = (weather) => {\r\n  switch (weather) {\r\n    case \"Clear\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"36\"\r\n          height=\"36\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-brightness-high-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M12 8a4 4 0 1 1-8 0 4 4 0 0 1 8 0zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\r\n        </svg>\r\n      );\r\n    case \"Drizzle\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"36\"\r\n          height=\"36\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-cloud-drizzle-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M4.158 12.025a.5.5 0 0 1 .316.633l-.5 1.5a.5.5 0 0 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.317zm6 0a.5.5 0 0 1 .316.633l-.5 1.5a.5.5 0 0 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.317zm-3.5 1.5a.5.5 0 0 1 .316.633l-.5 1.5a.5.5 0 0 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.317zm6 0a.5.5 0 0 1 .316.633l-.5 1.5a.5.5 0 1 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.317zm.747-8.498a5.001 5.001 0 0 0-9.499-1.004A3.5 3.5 0 1 0 3.5 11H13a3 3 0 0 0 .405-5.973z\" />\r\n        </svg>\r\n      );\r\n    case \"Rain\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"36\"\r\n          height=\"36\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-cloud-rain-heavy-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M4.176 11.032a.5.5 0 0 1 .292.643l-1.5 4a.5.5 0 0 1-.936-.35l1.5-4a.5.5 0 0 1 .644-.293zm3 0a.5.5 0 0 1 .292.643l-1.5 4a.5.5 0 0 1-.936-.35l1.5-4a.5.5 0 0 1 .644-.293zm3 0a.5.5 0 0 1 .292.643l-1.5 4a.5.5 0 0 1-.936-.35l1.5-4a.5.5 0 0 1 .644-.293zm3 0a.5.5 0 0 1 .292.643l-1.5 4a.5.5 0 0 1-.936-.35l1.5-4a.5.5 0 0 1 .644-.293zm.229-7.005a5.001 5.001 0 0 0-9.499-1.004A3.5 3.5 0 1 0 3.5 10H13a3 3 0 0 0 .405-5.973z\" />\r\n        </svg>\r\n      );\r\n    case \"Thunderstorm\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"36\"\r\n          height=\"36\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-cloud-lightning-rain-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M2.658 11.026a.5.5 0 0 1 .316.632l-.5 1.5a.5.5 0 1 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.316zm9.5 0a.5.5 0 0 1 .316.632l-.5 1.5a.5.5 0 0 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.316zm-7.5 1.5a.5.5 0 0 1 .316.632l-.5 1.5a.5.5 0 1 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.316zm9.5 0a.5.5 0 0 1 .316.632l-.5 1.5a.5.5 0 0 1-.948-.316l.5-1.5a.5.5 0 0 1 .632-.316zm-7.105-1.25A.5.5 0 0 1 7.5 11h1a.5.5 0 0 1 .474.658l-.28.842H9.5a.5.5 0 0 1 .39.812l-2 2.5a.5.5 0 0 1-.875-.433L7.36 14H6.5a.5.5 0 0 1-.447-.724l1-2zm6.352-7.249a5.001 5.001 0 0 0-9.499-1.004A3.5 3.5 0 1 0 3.5 10H13a3 3 0 0 0 .405-5.973z\" />\r\n        </svg>\r\n      );\r\n    case \"Snow\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"36\"\r\n          height=\"36\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-snow\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M8 16a.5.5 0 0 1-.5-.5v-1.293l-.646.647a.5.5 0 0 1-.707-.708L7.5 12.793V8.866l-3.4 1.963-.496 1.85a.5.5 0 1 1-.966-.26l.237-.882-1.12.646a.5.5 0 0 1-.5-.866l1.12-.646-.884-.237a.5.5 0 1 1 .26-.966l1.848.495L7 8 3.6 6.037l-1.85.495a.5.5 0 0 1-.258-.966l.883-.237-1.12-.646a.5.5 0 1 1 .5-.866l1.12.646-.237-.883a.5.5 0 1 1 .966-.258l.495 1.849L7.5 7.134V3.207L6.147 1.854a.5.5 0 1 1 .707-.708l.646.647V.5a.5.5 0 1 1 1 0v1.293l.647-.647a.5.5 0 1 1 .707.708L8.5 3.207v3.927l3.4-1.963.496-1.85a.5.5 0 1 1 .966.26l-.236.882 1.12-.646a.5.5 0 0 1 .5.866l-1.12.646.883.237a.5.5 0 1 1-.26.966l-1.848-.495L9 8l3.4 1.963 1.849-.495a.5.5 0 0 1 .259.966l-.883.237 1.12.646a.5.5 0 0 1-.5.866l-1.12-.646.236.883a.5.5 0 1 1-.966.258l-.495-1.849-3.4-1.963v3.927l1.353 1.353a.5.5 0 0 1-.707.708l-.647-.647V15.5a.5.5 0 0 1-.5.5z\" />\r\n        </svg>\r\n      );\r\n    case \"Clouds\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"36\"\r\n          height=\"36\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-clouds-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M11.473 9a4.5 4.5 0 0 0-8.72-.99A3 3 0 0 0 3 14h8.5a2.5 2.5 0 1 0-.027-5z\" />\r\n          <path d=\"M14.544 9.772a3.506 3.506 0 0 0-2.225-1.676 5.502 5.502 0 0 0-6.337-4.002 4.002 4.002 0 0 1 7.392.91 2.5 2.5 0 0 1 1.17 4.769z\" />\r\n        </svg>\r\n      );\r\n    case \"Haze\":\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"36\"\r\n          height=\"36\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-cloud-haze-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M4 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm-3 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm2 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM13.405 4.027a5.001 5.001 0 0 0-9.499-1.004A3.5 3.5 0 1 0 3.5 10H13a3 3 0 0 0 .405-5.973z\" />\r\n        </svg>\r\n      );\r\n    default:\r\n      return <>{weather}</>;\r\n  }\r\n};\r\n","export const windDirectionConverter = (angle) => {\r\n  const directions = [\"N\", \"NE\", \"E\", \"SE\", \"S\", \"SW\", \"W\", \"NW\"];\r\n  return directions[Math.round(angle / 45) % 8];\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport { WeatherContext } from \"../../contexts/weatherContext\";\r\nimport { iconPicker } from \"../../utils/iconPicker\";\r\nimport { windDirectionConverter } from \"../../utils/windDirectionConverter\";\r\n\r\nconst MainWeather = () => {\r\n  const [weather, setWeather] = useContext(WeatherContext);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n          <Typography variant=\"h3\" style={{ fontWeight: 600 }}>\r\n            {Math.round(parseInt(weather.temp) - 270)}° {iconPicker(weather.main)}{\" \"}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n          <Grid style={{ marginRight: 12 }}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-wind\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M12.5 2A2.5 2.5 0 0 0 10 4.5a.5.5 0 0 1-1 0A3.5 3.5 0 1 1 12.5 8H.5a.5.5 0 0 1 0-1h12a2.5 2.5 0 0 0 0-5zm-7 1a1 1 0 0 0-1 1 .5.5 0 0 1-1 0 2 2 0 1 1 2 2h-5a.5.5 0 0 1 0-1h5a1 1 0 0 0 0-2zM0 9.5A.5.5 0 0 1 .5 9h10.042a3 3 0 1 1-3 3 .5.5 0 0 1 1 0 2 2 0 1 0 2-2H.5a.5.5 0 0 1-.5-.5z\" />\r\n            </svg>\r\n          </Grid>\r\n          <Grid>\r\n            <Typography>Wind</Typography>\r\n            <Typography>\r\n              {\" \"}\r\n              {windDirectionConverter(weather.windDeg)} {weather.windSpeed} m/s\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n          <Typography>\r\n            {weather.description}. Temperature feels like{\" \"}\r\n            {Math.round(parseInt(weather.feelsLike) - 270)}°. Winds{\" \"}\r\n            {windDirectionConverter(weather.windDeg)} at {weather.windSpeed} m/s\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainWeather;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const LocationContext = createContext();\r\n\r\n//LocationProvider need to be uppercase & need to have props\r\nexport const LocationProvider = (props) => {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [latitude, setLatitude] = useState(\"\");\r\n  const [longitude, setLongitude] = useState(\"\");\r\n  return (\r\n    <LocationContext.Provider\r\n      value={{\r\n        locationValue: [location, setLocation],\r\n        latValue: [latitude, setLatitude],\r\n        lonValue: [longitude, setLongitude],\r\n      }}\r\n    >\r\n      {props.children}\r\n    </LocationContext.Provider>\r\n  );\r\n};\r\n","import { Typography } from \"@material-ui/core\";\r\n\r\nimport { useContext } from \"react\";\r\n\r\nimport { LocationContext } from \"../../contexts/locationContext\";\r\nimport { WeatherContext } from \"../../contexts/weatherContext\";\r\n\r\nimport { getDate } from \"../../utils/DateTime\";\r\n\r\nconst WeatherHeader = () => {\r\n  const { locationValue } = useContext(LocationContext);\r\n  const [location, setLocation] = locationValue;\r\n\r\n  const [weather, setWeather] = useContext(WeatherContext);\r\n\r\n  // const date = weather.date;\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" style={{ fontWeight: 600, marginBottom: 48 }}>\r\n        Weather today{\" \"}\r\n        <Typography\r\n          style={{\r\n            display: \"inline-block\",\r\n            verticalAlign: \"middle\",\r\n            fontSize: 20,\r\n          }}\r\n        >\r\n          - {location}\r\n        </Typography>\r\n      </Typography>\r\n      <Typography>{getDate(weather.date)}</Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherHeader;\r\n","import { Card, CardContent, Container, makeStyles } from \"@material-ui/core\";\r\nimport ExtraWeather from \"./showWeather/extraWeather\";\r\nimport MainWeather from \"./showWeather/mainWeather\";\r\nimport WeatherHeader from \"./showWeather/weatherHeader\";\r\n\r\nimport { WeatherContext } from \"../contexts/weatherContext\";\r\nimport { useContext } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: 800,\r\n  },\r\n  mainCard: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: 24,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: 48,\r\n      marginLeft: 96,\r\n      marginBottom: 48,\r\n      marginRight: 48,\r\n    },\r\n    borderRadius: 12,\r\n  },\r\n}));\r\n\r\nconst ShowWeather = () => {\r\n  const classes = useStyles();\r\n\r\n  const [weather, setWeather] = useContext(WeatherContext);\r\n\r\n  return (\r\n    <Container>\r\n      {weather.temp ? (\r\n        <Card variant=\"outlined\" className={classes.mainCard}>\r\n          <CardContent style={{ margin: 12 }}>\r\n            {/* Main Weather Component */}\r\n            <WeatherHeader />\r\n            <MainWeather />\r\n            <ExtraWeather />\r\n          </CardContent>\r\n        </Card>\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowWeather;\r\n","import React from \"react\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst TempDay = ({ singleDay }) => {\r\n  return (\r\n    <>\r\n      <Grid item xs={6} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n        <Grid style={{ marginRight: 12 }}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-thermometer-sun\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M5 12.5a1.5 1.5 0 1 1-2-1.415V2.5a.5.5 0 0 1 1 0v8.585A1.5 1.5 0 0 1 5 12.5z\" />\r\n            <path d=\"M1 2.5a2.5 2.5 0 0 1 5 0v7.55a3.5 3.5 0 1 1-5 0V2.5zM3.5 1A1.5 1.5 0 0 0 2 2.5v7.987l-.167.15a2.5 2.5 0 1 0 3.333 0L5 10.486V2.5A1.5 1.5 0 0 0 3.5 1zm5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0v-1a.5.5 0 0 1 .5-.5zm4.243 1.757a.5.5 0 0 1 0 .707l-.707.708a.5.5 0 1 1-.708-.708l.708-.707a.5.5 0 0 1 .707 0zM8 5.5a.5.5 0 0 1 .5-.5 3 3 0 1 1 0 6 .5.5 0 0 1 0-1 2 2 0 0 0 0-4 .5.5 0 0 1-.5-.5zM12.5 8a.5.5 0 0 1 .5-.5h1a.5.5 0 1 1 0 1h-1a.5.5 0 0 1-.5-.5zm-1.172 2.828a.5.5 0 0 1 .708 0l.707.708a.5.5 0 0 1-.707.707l-.708-.707a.5.5 0 0 1 0-.708zM8.5 12a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-1 0v-1a.5.5 0 0 1 .5-.5z\" />\r\n          </svg>\r\n        </Grid>\r\n        <Grid>\r\n          <Typography>Day Temp</Typography>\r\n          <Typography>{Math.round(singleDay.forecastDayTemp) - 270}°</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TempDay;\r\n","import React from \"react\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst TempNight = ({ singleDay }) => {\r\n  return (\r\n    <>\r\n      <Grid item xs={6} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n        <Grid style={{ marginRight: 12 }}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-moon-stars-fill\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z\" />\r\n            <path d=\"M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z\" />\r\n          </svg>\r\n        </Grid>\r\n        <Grid>\r\n          <Typography>Night Temp</Typography>\r\n          <Typography>{Math.round(singleDay.forecastNightTemp) - 270}°</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TempNight;\r\n","import React from \"react\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst Humidity = ({ singleDay }) => {\r\n  return (\r\n    <>\r\n      <Grid item xs={6} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n        <Grid style={{ marginRight: 12 }}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-droplet-fill\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M8 16a6 6 0 0 0 6-6c0-1.655-1.122-2.904-2.432-4.362C10.254 4.176 8.75 2.503 8 0c0 0-6 5.686-6 10a6 6 0 0 0 6 6zM6.646 4.646c-.376.377-1.272 1.489-2.093 3.13l.894.448c.78-1.559 1.616-2.58 1.907-2.87l-.708-.708z\"\r\n            />\r\n          </svg>\r\n        </Grid>\r\n        <Grid>\r\n          <Typography>Humidity</Typography>\r\n          <Typography>{singleDay.forecastHumidity}%</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Humidity;\r\n","import React from \"react\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst Cloudiness = ({ singleDay }) => {\r\n  return (\r\n    <>\r\n      <Grid item xs={6} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n        <Grid style={{ marginRight: 12 }}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-cloud-fill\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M4.406 3.342A5.53 5.53 0 0 1 8 2c2.69 0 4.923 2 5.166 4.579C14.758 6.804 16 8.137 16 9.773 16 11.569 14.502 13 12.687 13H3.781C1.708 13 0 11.366 0 9.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\" />\r\n          </svg>\r\n        </Grid>\r\n        <Grid>\r\n          <Typography>Cloudiness</Typography>\r\n          <Typography>{singleDay.forecastCloudiness}%</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cloudiness;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const ForecastContext = createContext();\r\n\r\nexport const ForecastProvider = (props) => {\r\n  const [forecastData, setForecastData] = useState([\r\n    {\r\n      i: \"\",\r\n      forecastDaily: \"\",\r\n      forecastDateTime: \"\",\r\n      forecastDayTemp: \"\",\r\n      forecastNightTemp: \"\",\r\n      forecastHumidity: \"\",\r\n      forecastCloudiness: \"\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <ForecastContext.Provider value={[forecastData, setForecastData]}>\r\n      {props.children}\r\n    </ForecastContext.Provider>\r\n  );\r\n};\r\n","import {\r\n  Accordion,\r\n  Typography,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Card,\r\n  makeStyles,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { getWeekDay } from \"../utils/DateTime\";\r\nimport TempDay from \"./forecast/tempDay\";\r\nimport TempNight from \"./forecast/tempNight\";\r\nimport Humidity from \"./forecast/humidity\";\r\nimport Cloudiness from \"./forecast/cloudiness\";\r\n\r\nimport { ForecastContext } from \"../contexts/forecastContext\";\r\nimport { iconPicker } from \"../utils/iconPicker\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: 36,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: 48,\r\n      marginRight: 160,\r\n      marginBottom: 48,\r\n    },\r\n    borderRadius: 12,\r\n  },\r\n  expandIcon: {\r\n    \"&$expanded\": {\r\n      transition: \".5s\",\r\n      transform: \"rotate(360deg)\",\r\n    },\r\n  },\r\n  expanded: {},\r\n}));\r\n\r\nconst Forecast = () => {\r\n  const classes = useStyles();\r\n\r\n  const [forecastData, setForecastData] = useContext(ForecastContext);\r\n\r\n  return (\r\n    <>\r\n      <Card variant=\"outlined\" className={classes.main}>\r\n        {forecastData.map((singleDay) =>\r\n          //To check if singleday holds null value or not, because if null it will show empty cell in accordion\r\n          singleDay.forecastDayTemp ? (\r\n            <Accordion\r\n              key={singleDay.i}\r\n              className={classes.accordions}\r\n              defaultExpanded={singleDay.i == 1 ? true : false}\r\n            >\r\n              <AccordionSummary\r\n                classes={{\r\n                  expandIcon: classes.expandIcon,\r\n                  expanded: classes.expanded,\r\n                }}\r\n                // expandIcon={<ExpandMoreIcon />}\r\n                expandIcon={iconPicker(singleDay.forecastMain)}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography>\r\n                  {singleDay.i == 1 ? (\r\n                    <Typography>Tomorrow</Typography>\r\n                  ) : (\r\n                    getWeekDay(singleDay.forecastDateTime)\r\n                  )}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Grid container spacing={3}>\r\n                  <TempDay singleDay={singleDay} />\r\n                  <TempNight singleDay={singleDay} />\r\n                </Grid>\r\n              </AccordionDetails>\r\n              {/* ================================================================ */}\r\n              <AccordionDetails>\r\n                <Grid container spacing={3}>\r\n                  <Humidity singleDay={singleDay} />\r\n                  <Cloudiness singleDay={singleDay} />\r\n                </Grid>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ) : null\r\n        )}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport ShowWeather from \"./components/showWeather\";\r\nimport Forecast from \"./components/forecast\";\r\n\r\nconst Weather = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Grid container>\r\n          <Grid item xs={12} sm={8}>\r\n            <ShowWeather />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Forecast />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n  Link,\r\n  CssBaseline,\r\n  Switch,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport WbSunnyRoundedIcon from \"@material-ui/icons/WbSunnyRounded\";\r\n\r\nimport mbxGeocoding from \"@mapbox/mapbox-sdk/services/geocoding\";\r\nimport axios from \"axios\";\r\n\r\nimport { LocationContext } from \"../contexts/locationContext\";\r\nimport { WeatherContext } from \"../contexts/weatherContext\";\r\nimport { ForecastContext } from \"../contexts/forecastContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    marginLeft: 20,\r\n  },\r\n  button: {\r\n    margin: 10,\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  //getting location context\r\n  const { locationValue } = useContext(LocationContext);\r\n  const [location, setLocation] = locationValue;\r\n\r\n  //getting weather context\r\n  const [weather, setWeather] = useContext(WeatherContext);\r\n\r\n  //getting forecast context\r\n  const [forecastData, setForecastData] = useContext(ForecastContext);\r\n\r\n  //getting ip and address data of user on start of the application\r\n  useEffect(async () => {\r\n    const data = await axios.get(\"http://ip-api.com/json\");\r\n    setLocation(`${data.data.city},${data.data.regionName}`);\r\n    let Url = `https://api.openweathermap.org/data/2.5/onecall?lat=${data.data.lat}&lon=${data.data.lon}&exclude=minutely&appid=92d4fe58fd19b2bfd859485342be9dde`;\r\n    const weatherJson = await axios.get(Url);\r\n    setStateData(weatherJson);\r\n  }, []);\r\n\r\n  // Geocoding the latitude & longitude from cityname with mapbox api\r\n  const searchCity = async () => {\r\n    const mapboxToken =\r\n      \"pk.eyJ1IjoiZ291cmFiLXBhdWwiLCJhIjoiY2tvYmE2MWRsMDRtMDJ1bXFtNmFsdWdpZyJ9.nyRM24alI7SC47EXCwBzrw\";\r\n    const geoCoder = mbxGeocoding({ accessToken: mapboxToken });\r\n    console.log(location);\r\n    const geoData = await geoCoder.forwardGeocode({ query: location, limit: 1 }).send();\r\n    return [\r\n      geoData.body.features[0].geometry.coordinates[1],\r\n      geoData.body.features[0].geometry.coordinates[0],\r\n    ];\r\n  };\r\n\r\n  const searchWeather = React.useMemo(\r\n    () => async (e) => {\r\n      e.preventDefault();\r\n      console.log(\"fetching data\");\r\n      //to prevent forecast data from over stacking when user searches with text\r\n      // await setWeather({});\r\n      await setForecastData([\r\n        {\r\n          forecastDayTemp: null,\r\n        },\r\n      ]);\r\n      const [lat, lon] = await searchCity();\r\n      let Url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely&appid=92d4fe58fd19b2bfd859485342be9dde`;\r\n      const weatherJson = await axios.get(Url);\r\n      setStateData(weatherJson);\r\n    },\r\n    [location]\r\n  );\r\n\r\n  // for setting the state data aquired from useEffect or searchweather\r\n  const setStateData = (weatherJson) => {\r\n    // setting State pf Main Weather Data\r\n    setWeather({\r\n      main: weatherJson.data.current.weather[0].main,\r\n      temp: weatherJson.data.current.temp,\r\n      windSpeed: weatherJson.data.current.wind_speed,\r\n      windDeg: weatherJson.data.current.wind_deg,\r\n      humidity: weatherJson.data.current.humidity,\r\n      cloudiness: weatherJson.data.current.clouds,\r\n      sunrise: weatherJson.data.current.sunrise,\r\n      sunset: weatherJson.data.current.sunset,\r\n      description: weatherJson.data.current.weather[0].description,\r\n      feelsLike: weatherJson.data.current.feels_like,\r\n    });\r\n    //setting state of forecast data\r\n    for (let i = 1; i < 7; i++) {\r\n      setForecastData((forecastData) => [\r\n        //I NEED TO PASS STATE AS ARGUMENT FFS, WASTED 5 HOURS\r\n        ...forecastData,\r\n        {\r\n          i: i,\r\n          forecastMain: weatherJson.data.daily[i].weather[0].main.toString(),\r\n          forecastDateTime: weatherJson.data.daily[i].dt.toString(), //for weekday\r\n          forecastDayTemp: weatherJson.data.daily[i].temp.day.toFixed(2).toString(),\r\n          forecastNightTemp: weatherJson.data.daily[i].temp.night.toFixed(2).toString(),\r\n          forecastHumidity: weatherJson.data.daily[i].humidity.toString(),\r\n          forecastCloudiness: weatherJson.data.daily[i].clouds.toString(),\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <WbSunnyRoundedIcon style={{ marginRight: 5 }} />\r\n          <Link\r\n            href=\"javascript:window.location.reload(true)\"\r\n            underline=\"none\"\r\n            color=\"inherit\"\r\n            target=\"_self\"\r\n            onClick={(e) => e.preventDefault}\r\n          >\r\n            <Typography style={{ marginRight: 20 }} variant=\"h6\">\r\n              Weather\r\n            </Typography>\r\n          </Link>\r\n          {/* For Spacing in middle */}\r\n          <Typography style={{ flexGrow: 5 }}></Typography>\r\n          <form onSubmit={searchWeather}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              placeholder=\"City Name\"\r\n              value={location}\r\n              onChange={(e) => setLocation(e.target.value)} //HUH...\r\n            ></TextField>\r\n          </form>\r\n          <Typography style={{ flexGrow: 1 }}></Typography>\r\n          <Switch checked={props.darkState} onChange={props.handleThemeChange} />\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { lightBlue, pink, purple, deepPurple } from \"@material-ui/core/colors\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\nimport Weather from \"./weather\";\r\nimport Navbar from \"./components/navbar\";\r\n\r\nimport { WeatherProvider } from \"./contexts/weatherContext\";\r\nimport { LocationProvider } from \"./contexts/locationContext\";\r\nimport { ForecastProvider } from \"./contexts/forecastContext\";\r\n\r\nconst App = () => {\r\n  const [darkState, setDarkState] = useState(\r\n    Boolean(JSON.parse(localStorage.getItem(\"darkTheme\"))) || false\r\n  );\r\n  const palletType = darkState ? \"dark\" : \"light\";\r\n  const mainPrimaryColor = darkState ? pink[700] : lightBlue[500];\r\n  const mainSecondaryColor = darkState ? purple[500] : deepPurple[500];\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: palletType,\r\n      primary: {\r\n        main: mainPrimaryColor,\r\n      },\r\n      secondary: {\r\n        main: mainSecondaryColor,\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily: [\"Roboto\", \"Arial\", \"sans-serif\", \"-apple-system\"],\r\n    },\r\n  });\r\n  //this was tricky, got me 2 hours and brain tumor\r\n  const handleThemeChange = () => {\r\n    setDarkState((darkState) => !darkState);\r\n    localStorage.setItem(\"darkTheme\", JSON.stringify(!darkState));\r\n  };\r\n\r\n  return (\r\n    //Didn't wrap this, wasted 1 hour, felt like an idiot\r\n    <LocationProvider>\r\n      <ForecastProvider>\r\n        <WeatherProvider>\r\n          <ThemeProvider theme={darkTheme}>\r\n            <BrowserRouter>\r\n              <div className=\"App\">\r\n                <Navbar darkState={Boolean(darkState)} handleThemeChange={handleThemeChange} />\r\n                <Weather />\r\n              </div>\r\n            </BrowserRouter>\r\n          </ThemeProvider>\r\n        </WeatherProvider>\r\n      </ForecastProvider>\r\n    </LocationProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}